---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: Operators-Config
    policy.open-cluster-management.io/controls: ACS-Operator
    policy.open-cluster-management.io/standards: TofuOrg-Standards
  name: policy-acs-securedcluster-helm
spec:
  disabled: false
  remediationAction: enforce
  policy-templates:

    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: acs-namespace-charts
        spec:
          severity: high
          remediationAction: enforce
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: Namespace
                metadata:
                  name: rhacs-charts-ns

    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: acs-securedcluster-helm-placementrule
        spec:
          severity: high
          remediationAction: enforce
          object-templates:

            - complianceType: musthave
              objectDefinition:
                apiVersion: apps.open-cluster-management.io/v1
                kind: PlacementRule
                metadata:
                  labels:
                    app: stackrox
                  name: acs-securedcluster-helm
                  namespace: stackrox
                spec:
                  clusterSelector:
                    matchLabels:
                      vendor: 'EKS'

    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: acs-securedcluster-helm-application
        spec:
          severity: high
          remediationAction: enforce
          object-templates:

            - complianceType: musthave
              objectDefinition:
                apiVersion: app.k8s.io/v1beta1
                kind: Application
                metadata:
                  name: rhacs-securedcluster-helm
                  namespace: stackrox
                spec:
                  componentKinds:
                  - group: apps.open-cluster-management.io
                    kind: Subscription
                  descriptor: {}
                  selector:
                    matchLabels:
                      app: stackrox-secured-cluster-services

    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: acs-securedcluster-helm-channel
        spec:
          severity: high
          remediationAction: enforce
          object-templates:

            - complianceType: musthave
              objectDefinition:
                apiVersion: apps.open-cluster-management.io/v1
                kind: Channel
                metadata:
                  annotations:
                    apps.open-cluster-management.io/reconcile-rate: medium
                  name: rhacs-charts
                  namespace: rhacs-charts-ns
                spec:
                  type: HelmRepo
                  pathname: 'https://mirror.openshift.com/pub/rhacs/charts'

    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: acs-securedcluster-helm-subscription
        spec:
          severity: high
          remediationAction: enforce
          object-templates:

            - complianceType: musthave
              objectDefinition:
                apiVersion: apps.open-cluster-management.io/v1
                kind: Subscription
                metadata:
                  annotations:
                  labels:
                    app: stackrox-secured-cluster-services
                  name: stackrox-secured-cluster-services
                  namespace: stackrox
                spec:
                  channel: rhacs-charts-ns/rhacs-charts
                  name: stackrox-secured-cluster-services
                  packageOverrides:
                  - packageName: stackrox-secured-cluster-services
                    packageAlias: stackrox-secured-cluster-svcs
                    packageOverrides:
                    - path: spec
                      value:
                        allowNonstandardReleaseName: true
                        centralEndpoint: '{{hub (lookup "route.openshift.io/v1" "Route" "stackrox" "central").spec.host hub}}:443'
                        clusterName: 'eks-tofu'
                        badclusterName: '{{hub .ManagedClusterName hub}}'
                        admissionControl:
                          serviceTLS:
                            cert: |
                              {{hub (index (lookup "v1" "Secret" "stackrox" "admission-control-tls").data "admission-control-cert.pem") | base64dec | autoindent hub}}
                            key: |
                              {{hub (index (lookup "v1" "Secret" "stackrox" "admission-control-tls").data "admission-control-key.pem") | base64dec | autoindent hub}}
                        ca:
                          cert: |
                            {{hub (index (lookup "v1" "Secret" "stackrox" "collector-tls").data "ca.pem") | base64dec | autoindent hub}}
                        collector:
                          serviceTLS:
                            cert: |
                              {{hub (index (lookup "v1" "Secret" "stackrox" "collector-tls").data "collector-cert.pem") | base64dec | autoindent hub}}
                            key: |
                              {{hub (index (lookup "v1" "Secret" "stackrox" "collector-tls").data "collector-key.pem") | base64dec | autoindent hub}}
                        sensor:
                          serviceTLS:
                            cert: |
                              {{hub (index (lookup "v1" "Secret" "stackrox" "sensor-tls").data "sensor-cert.pem") | base64dec | autoindent hub}}
                            key: |
                              {{hub (index (lookup "v1" "Secret" "stackrox" "sensor-tls").data "sensor-key.pem") | base64dec | autoindent hub}}
                        imagePullSecrets:
                          useExisting: open-cluster-management-image-pull-credentials
                  placement:
                    # IF subscription is created ON the managed cluster, so place it "locally".
                    # local: true
                    placementRef:
                      kind: PlacementRule
                      # name: acs-securedcluster-helm
                      name: placement-policy-acs-securedcluster-helm-sub

# debugging
# EKS$ oc get subscriptions -n stackrox # subscription has no subscriptionstate nor events
# EKS$ oc get helmrelease stackrox-secured-cluster-svcs -n stackrox -o yaml > /tmp/h.yaml
# EKS$ cat /tmp/h.yaml | yq e '.status.deployedRelease.manifest'
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: Operators-Config
    policy.open-cluster-management.io/controls: ACS-Operator
    policy.open-cluster-management.io/standards: TofuOrg-Standards
  name: policy-acs-securedcluster-helm-sub
spec:
  disabled: false
  remediationAction: enforce
  policy-templates:

    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: acs-securedcluster-pullsecret
        spec:
          severity: low
          remediationAction: enforce
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: Secret
                metadata:
                  name: open-cluster-management-image-pull-credentials
                  namespace: stackrox
                type: kubernetes.io/dockerconfigjson
                data:
                  .dockerconfigjson: |
                    {{(index (lookup "v1" "Secret" "open-cluster-management-agent" "open-cluster-management-image-pull-credentials").data ".dockerconfigjson") }}
